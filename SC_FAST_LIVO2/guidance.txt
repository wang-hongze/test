wsl -d Ubuntu-18.04

运行指令--原版
# 终端A：启动roscore
roscore
# 终端B：启动FAST-LIVO2
roslaunch fast_livo mapping_avia.launch
# 终端C：播放数据
rosbag play ~/fast_livo2_ws/datasets/HKU_Lecture_Center_01.bag

运行指令--加入PGO
# 终端A：启动roscore
roscore
# 终端B：启动FAST-LIVO2
cd ~/fast_livo2_ws/FAST-LIVO2-Mod && export ROS_PACKAGE_PATH=$PWD:$ROS_PACKAGE_PATH
roslaunch launch/mapping_avia.launch
# 终端C：启动PGO
roslaunch ~/fast_livo2_ws/FAST-LIVO2-Mod/PGO/launch/fastlivo2_pgo.launch
# 终端D：播放数据
rosbag play ~/fast_livo2_ws/datasets/HKU_Lecture_Center_01.bag

运行指令--加入PGO--Hilti
# 终端A：启动roscore
roscore
# 终端B：启动FAST-LIVO2
cd ~/fast_livo2_ws/FAST-LIVO2-Mod && export ROS_PACKAGE_PATH=$PWD:$ROS_PACKAGE_PATH
roslaunch launch/mapping_hesaixt32_hilti22.launch
# 终端C：启动PGO
roslaunch ~/fast_livo2_ws/FAST-LIVO2-Mod/PGO/launch/fastlivo2_pgo_hilti.launch
# 终端D：播放数据
rosbag play ~/fast_livo2_ws/datasets/exp01_construction_ground_level.bag
rosbag play ~/fast_livo2_ws/datasets/exp21_outside_building.bag

# 编译指令
# fast livo2
cd ~/fast_livo2_ws/FAST-LIVO2-Mod
rm -rf build && mkdir build && cd build
cmake ..
make -j4

# PGO
cd ~/fast_livo2_ws/FAST-LIVO2-Mod/PGO
rm -rf build && mkdir -p build && cd build
cmake ..
cd ..
make -j4

# 查看状态
ps aux | grep fastlivo

# 备份指令
cp -r ~/fast_livo2_ws/FAST-LIVO2-Mod /mnt/c/Users/jxk33/Desktop/fast_livo2_ws_backup
cp -r ~/fast_livo2_ws/FAST-LIVO2-Mod ~/fast_livo2_ws/FAST-LIVO2-Mod-Backup
cp -r ~/fast_livo2_ws/FAST-LIVO2-Mod/rviz_cfg /mnt/c/Users/jxk33/Desktop/rviz
# 回退指令
cd ~/fast_livo2_ws && rm -rf FAST-LIVO2-Mod❗❗❗
cp -r ~/fast_livo2_ws/FAST-LIVO2-Mod-Backup/FAST-LIVO2-Mod ~/fast_livo2_ws/FAST-LIVO2-Mod❗❗❗
cp -r /mnt/c/Users/jxk33/Desktop/SC_FAST_LIVO2-main ~/fast_livo2_ws/FAST-LIVO2-Mod❗❗❗

# 导数据
cp "/mnt/d/exp21_outside_building.bag" ~/fast_livo2_ws/datasets

cp "~/fast_livo2_ws/datasets/exp21_outside_building.bag" /mnt/d

# 编辑指令
cd ~/fast_livo2_ws/FAST-LIVO2-Mod
code .

# 导出hilti结果
hilti.yaml中改名字，和.bag一样
cd ~/hilti_submission
cp ~/fast_livo2_ws/FAST-LIVO2-Mod/Log/result/exp01_construction_ground_level.txt ./exp01_construction_ground_level.txt
cp ~/fast_livo2_ws/FAST-LIVO2-Mod/Log/result/exp21_outside_building.txt ./exp21_outside_building.txt
zip -r hilti_submission.zip *.txt
cp -r ~/hilti_submission/hilti_submission.zip /mnt/c/Users/jxk33/Desktop

# evo可视化
cd ~/fast_livo2_ws/FAST-LIVO2-Mod/Log/result/
evo_traj tum exp01_construction_ground_level.txt exp21_outside_building.txt --plot

# 目前任务
gtsam->优化->pose graph 对比 导出g2o点云图对比, graph viewer
visualize the loop and pose

任务3：实现地图重建机制（必要）
目标: 使用PGO优化结果重建局部地图
子任务3.1: 添加地图重建函数
实现rebuildLocalMapWithPGO()函数
使用优化后的位姿重新构建体素地图
子任务3.2: 集成到体素地图管理器
修改VoxelMapManager以支持PGO优化
添加地图更新机制

首先请完整浏览代码，确认你了解项目结构和具体内容。请注意：这是一个科研项目，你的所有修改都要及其严谨、必要、不得违反数学知识，不得编造或模拟数据。
请注意：你不应该随意猜测变量或方法名，而是应该仔细在项目中检查已有的代码，保障你的修改不会报错，逻辑严谨，并能准确达成目标。因此，你需要准确实施目标，频繁严谨地搜索查找代码，并且在修改代码后进行自检